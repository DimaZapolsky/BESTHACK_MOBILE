//
//  main.cpp
//  Backend
//
//  Created by Dima Zapolsky on 30/03/2019.
//  Copyright Â© 2019 Dima Zapolsky. All rights reserved.
//

#include <iostream>
#include "Card.hpp"
#include <fstream>

int main(int argc, const char * argv[]) {
    /*for (int i = 1; i < argc; ++i) {
        ifstream in(argv[i]);
        string js = "";
        string s;
        while (in >> s) {
            js += s + " ";
        }
        in.close();
        
        json boxes = json::parse(js);
        auto card = Card(json(boxes["items"]));
        cout << "___________________________" << endl;
        cout << "  Bank name = " << card.getBankName() << endl;
        cout << "Card number = " << card.getCardNumber() << endl;
        cout << " Owner name = " << card.getName() << endl;
        cout << "   Card nva = " << card.getNVA() << endl;
        cout << "Card system = " << card.getSystem() << endl;
        cout << "---------------------------" << endl;
    }*/
    json boxes = json::parse("{\"count\": 0, \"items\": [{\"str\": \"~\", \"x1\": 0, \"y1\": 16, \"x2\": 927, \"y2\": 272}, {\"str\": \"~\", \"x1\": 0, \"y1\": 0, \"x2\": 1716, \"y2\": 16}, {\"str\": \"~\", \"x1\": 0, \"y1\": 272, \"x2\": 529, \"y2\": 415}, {\"str\": \"a\", \"x1\": 1853, \"y1\": 0, \"x2\": 1920, \"y2\": 75}, {\"str\": \"B\", \"x1\": 927, \"y1\": 131, \"x2\": 987, \"y2\": 208}, {\"str\": \"A\", \"x1\": 995, \"y1\": 130, \"x2\": 1058, \"y2\": 208}, {\"str\": \"N\", \"x1\": 1074, \"y1\": 130, \"x2\": 1123, \"y2\": 207}, {\"str\": \"K\", \"x1\": 1151, \"y1\": 130, \"x2\": 1214, \"y2\": 206}, {\"str\": \"A\", \"x1\": 1262, \"y1\": 129, \"x2\": 1330, \"y2\": 205}, {\"str\": \"V\", \"x1\": 1330, \"y1\": 129, \"x2\": 1394, \"y2\": 205}, {\"str\": \"A\", \"x1\": 1402, \"y1\": 128, \"x2\": 1465, \"y2\": 204}, {\"str\": \"N\", \"x1\": 1482, \"y1\": 128, \"x2\": 1536, \"y2\": 204}, {\"str\": \"G\", \"x1\": 1560, \"y1\": 128, \"x2\": 1601, \"y2\": 203}, {\"str\": \"A\", \"x1\": 1632, \"y1\": 127, \"x2\": 1672, \"y2\": 203}, {\"str\": \"R\", \"x1\": 1712, \"y1\": 127, \"x2\": 1743, \"y2\": 203}, {\"str\": \"D\", \"x1\": 1783, \"y1\": 70, \"x2\": 1920, \"y2\": 203}, {\"str\": \"4\", \"x1\": 1909, \"y1\": 328, \"x2\": 1920, \"y2\": 351}, {\"str\": \"o\", \"x1\": 1920, \"y1\": 415, \"x2\": 1920, \"y2\": 415}, {\"str\": \"r\", \"x1\": 1911, \"y1\": 401, \"x2\": 1920, \"y2\": 413}, {\"str\": \"A\", \"x1\": 165, \"y1\": 415, \"x2\": 368, \"y2\": 628}, {\"str\": \"p\", \"x1\": 368, \"y1\": 415, \"x2\": 473, \"y2\": 628}, {\"str\": \"A\", \"x1\": 202, \"y1\": 694, \"x2\": 261, \"y2\": 791}, {\"str\": \"E\", \"x1\": 292, \"y1\": 694, \"x2\": 412, \"y2\": 793}, {\"str\": \"R\", \"x1\": 450, \"y1\": 691, \"x2\": 730, \"y2\": 822}, {\"str\": \"D\", \"x1\": 772, \"y1\": 663, \"x2\": 962, \"y2\": 787}, {\"str\": \"D\", \"x1\": 997, \"y1\": 663, \"x2\": 1133, \"y2\": 785}, {\"str\": \"E\", \"x1\": 1179, \"y1\": 692, \"x2\": 1317, \"y2\": 785}, {\"str\": \"E\", \"x1\": 1420, \"y1\": 693, \"x2\": 1477, \"y2\": 785}, {\"str\": \"E\", \"x1\": 1511, \"y1\": 695, \"x2\": 1556, \"y2\": 786}, {\"str\": \"T\", \"x1\": 1597, \"y1\": 695, \"x2\": 1637, \"y2\": 787}, {\"str\": \":\", \"x1\": 1667, \"y1\": 693, \"x2\": 1723, \"y2\": 786}, {\"str\": \"~\", \"x1\": 145, \"y1\": 415, \"x2\": 146, \"y2\": 703}, {\"str\": \"~\", \"x1\": 920, \"y1\": 415, \"x2\": 985, \"y2\": 628}, {\"str\": \".\", \"x1\": 0, \"y1\": 415, \"x2\": 145, \"y2\": 830}, {\"str\": \"4\", \"x1\": 195, \"y1\": 848, \"x2\": 215, \"y2\": 886}, {\"str\": \"0\", \"x1\": 225, \"y1\": 846, \"x2\": 247, \"y2\": 887}, {\"str\": \"3\", \"x1\": 257, \"y1\": 846, \"x2\": 272, \"y2\": 888}, {\"str\": \"8\", \"x1\": 272, \"y1\": 846, \"x2\": 314, \"y2\": 888}, {\"str\": \"o\", \"x1\": 751, \"y1\": 865, \"x2\": 811, \"y2\": 921}, {\"str\": \"s\", \"x1\": 820, \"y1\": 863, \"x2\": 842, \"y2\": 888}, {\"str\": \"h\", \"x1\": 771, \"y1\": 898, \"x2\": 1159, \"y2\": 973}, {\"str\": \"E\", \"x1\": 1159, \"y1\": 908, \"x2\": 1174, \"y2\": 971}, {\"str\": \",\", \"x1\": 1195, \"y1\": 909, \"x2\": 1232, \"y2\": 971}, {\"str\": \"D\", \"x1\": 156, \"y1\": 1007, \"x2\": 190, \"y2\": 1063}, {\"str\": \"M\", \"x1\": 209, \"y1\": 1007, \"x2\": 248, \"y2\": 1065}, {\"str\": \"I\", \"x1\": 271, \"y1\": 1008, \"x2\": 301, \"y2\": 1065}, {\"str\": \"T\", \"x1\": 323, \"y1\": 1006, \"x2\": 359, \"y2\": 1065}, {\"str\": \"R\", \"x1\": 383, \"y1\": 1006, \"x2\": 404, \"y2\": 1066}, {\"str\": \"Y\", \"x1\": 440, \"y1\": 1008, \"x2\": 476, \"y2\": 1065}, {\"str\": \"Z\", \"x1\": 556, \"y1\": 1006, \"x2\": 592, \"y2\": 1064}, {\"str\": \"A\", \"x1\": 612, \"y1\": 1005, \"x2\": 650, \"y2\": 1065}, {\"str\": \"P\", \"x1\": 670, \"y1\": 1006, \"x2\": 708, \"y2\": 1064}, {\"str\": \"O\", \"x1\": 726, \"y1\": 1006, \"x2\": 757, \"y2\": 1064}, {\"str\": \"L\", \"x1\": 784, \"y1\": 1010, \"x2\": 805, \"y2\": 1062}, {\"str\": \"S\", \"x1\": 839, \"y1\": 1005, \"x2\": 871, \"y2\": 1063}, {\"str\": \"K\", \"x1\": 897, \"y1\": 1005, \"x2\": 923, \"y2\": 1064}, {\"str\": \"I\", \"x1\": 923, \"y1\": 1005, \"x2\": 936, \"y2\": 1064}, {\"str\": \"Y\", \"x1\": 971, \"y1\": 1004, \"x2\": 1046, \"y2\": 1063}, {\"str\": \"E\", \"x1\": 1620, \"y1\": 1114, \"x2\": 1635, \"y2\": 1158}, {\"str\": \"l\", \"x1\": 1654, \"y1\": 1111, \"x2\": 1660, \"y2\": 1156}, {\"str\": \"e\", \"x1\": 1673, \"y1\": 1127, \"x2\": 1697, \"y2\": 1158}, {\"str\": \"c\", \"x1\": 1706, \"y1\": 1127, \"x2\": 1720, \"y2\": 1157}, {\"str\": \"t\", \"x1\": 1740, \"y1\": 1119, \"x2\": 1753, \"y2\": 1157}, {\"str\": \"r\", \"x1\": 1764, \"y1\": 1126, \"x2\": 1778, \"y2\": 1156}, {\"str\": \"o\", \"x1\": 1785, \"y1\": 1126, \"x2\": 1799, \"y2\": 1156}, {\"str\": \"n\", \"x1\": 1808, \"y1\": 1126, \"x2\": 1853, \"y2\": 1156}]}\n");
    auto card = Card(json(boxes["items"]));
    cout << "___________________________" << endl;
    cout << "  Bank name = " << card.getBankName() << endl;
    cout << "Card number = " << card.getCardNumber() << endl;
    cout << " Owner name = " << card.getName() << endl;
    cout << "   Card nva = " << card.getNVA() << endl;
    cout << "Card system = " << card.getSystem() << endl;
    cout << "---------------------------" << endl;
    return 0;
}
